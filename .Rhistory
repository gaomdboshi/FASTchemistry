devtools::install_github("MinhaoYaooo/MR-SPI")
library(MR.SPI)
devtools::document()
devtools::install()
devtools::install()
devtools::document()
install.packages(c("rlang", "glue", "cli", "curl", "stringi", "data.table"))
install.packages(c("rlang", "glue", "cli", "curl", "stringi", "data.table"))
install.packages(c("rlang", "glue", "cli", "curl", "stringi", "data.table"))
install.packages(c("rlang", "glue", "cli", "curl", "stringi", "data.table"))
devtools::document()
devtools::install()
devtools::install()
devtools::install()
library(FASTchemistry)
# 如果你的包中有定义的函数，调用并测试它们
# 例如，如果你有一个 install_mr_spi() 函数，可以这样运行：
install_mr_spi()
library(FASTchemistry)
# 如果你的包中有定义的函数，调用并测试它们
# 例如，如果你有一个 install_mr_spi() 函数，可以这样运行：
install_mr_spi()
devtools::document()
devtools::install()
library(FASTchemistry)
# 测试授权逻辑
generate_token()
# 测试主要功能
install_chemistry()
library(FASTchemistry)
# 测试主要功能
install_chemistry()
# 测试授权逻辑
generate_token()
library(FASTchemistry)
# 测试授权逻辑
generate_token()
# 测试主要功能
install_chemistry()
devtools::install()
library(FASTchemistry)
install_chemistry()
library(FASTchemistry)
# 测试授权文件是否加载
auth_file <- system.file("extdata", "authorized_tokens.csv", package = "FASTchemistry")
print(auth_file)
# 测试核心功能
install_chemistry()
library(FASTchemistry)
# 测试授权逻辑
generate_token()
# 测试主要功能
install_chemistry()
library(FASTchemistry)
# 测试授权逻辑
generate_token()
# 测试主要功能
install_chemistry()
# 测试授权逻辑
generate_token()
library(FASTchemistry)
# 测试授权逻辑
generate_token()
devtools::document()
library(FASTchemistry)
install_chemistry()
install_chemistry()
# 如果你的包中有定义的函数，调用并测试它们
# 例如，如果你有一个 install_mr_spi() 函数，可以这样运行：
install_mr_spi()
generate_token()
library(FASTchemistry)
generate_token()
install_chemistry()
devtools::document()
devtools::install()
library(FASTchemistry)
# 检查授权文件路径
auth_file <- system.file("extdata", "authorized_tokens.csv", package = "FASTchemistry")
print(auth_file)
# 检查文件是否存在
if (file.exists(auth_file)) {
print("Authorization file found!")
auth_tokens <- read.csv(auth_file, stringsAsFactors = FALSE)
print(auth_tokens)
} else {
stop("Authorization file not found!")
}
library(FASTchemistry)
# 检查授权文件路径
auth_file <- system.file("extdata", "authorized_tokens.csv", package = "FASTchemistry")
print(auth_file)
# 检查文件是否存在
if (file.exists(auth_file)) {
print("Authorization file found!")
auth_tokens <- read.csv(auth_file, stringsAsFactors = FALSE)
print(auth_tokens)
} else {
stop("Authorization file not found!")
}
devtools::document()
library(FASTchemistry)
# 检查授权文件路径
auth_file <- system.file("extdata", "authorized_tokens.csv", package = "FASTchemistry")
print(auth_file)
# 检查文件是否存在
if (file.exists(auth_file)) {
print("Authorization file found!")
auth_tokens <- read.csv(auth_file, stringsAsFactors = FALSE)
print(auth_tokens)
} else {
stop("Authorization file not found!")
}
validate_user()
library(FASTchemistry)
# 加载包
library(FASTchemistry)
# 测试安装功能
install_chemistry()
library(FASTchemistry)
library(FASTchemistry)
# 加载包
library(FASTchemistry)
# 测试安装功能
install_chemistry()
library(FASTchemistry)
# 加载包
library(FASTchemistry)
# 测试安装功能
install_chemistry()
generate_token()
# 加载包
library(FASTchemistry)
# 测试安装功能
install_chemistry()
devtools::document()
devtools::install()
library(FASTchemistry)
# 加载包
library(FASTchemistry)
# 测试安装功能
install_chemistry()
devtools::document()
